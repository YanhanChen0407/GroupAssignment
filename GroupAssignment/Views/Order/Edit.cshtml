@model GroupAssignment.Models.OrderEntity

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>OrderEntity</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="UserName" class="control-label"></label>
                <input asp-for="UserName" class="form-control" />
                <span asp-validation-for="UserName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="MFRName" class="control-label"></label>
                <input asp-for="MFRName" class="form-control" />
                <span asp-validation-for="MFRName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="OrderDescription" class="control-label"></label>
                <input asp-for="OrderDescription" class="form-control" />
                <span asp-validation-for="OrderDescription" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="OrderStatus" class="control-label"></label>
                <input asp-for="OrderStatus" class="form-control" />
                <span asp-validation-for="OrderStatus" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="OrderDate" class="control-label"></label>
                <input asp-for="OrderDate" class="form-control" />
                <span asp-validation-for="OrderDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="OrderDeliveryDate" class="control-label"></label>
                <input asp-for="OrderDeliveryDate" class="form-control" />
                <span asp-validation-for="OrderDeliveryDate" class="text-danger"></span>
            </div>
            <div>
                <h2>Product Details</h2>
                <table class="table" id="productTable">
                    <thead>
                        <tr>
                            <th>Product Name</th>
                            <th>Quantity</th>
                            <th>Description</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.Products.Count; i++)
                        {
                            <tr>
                                <td>
                                    <input asp-for="Products[i].ProductName" class="form-control" />
                                    @Html.HiddenFor(_ => Model.Products[i].Id) 
                                </td>
                                <td>
                                    <input asp-for="Products[i].ProductQuantity" type="number" class="form-control" />
                                </td>
                                <td>
                                    <input asp-for="Products[i].ProductDescription" class="form-control" />
                                </td>
                                <td>
                                    <button type="button" onclick="removeRow(this)" class="btn btn-danger">Remove</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <button type="button" onclick="addRow()" class="btn btn-default">Add Row</button>
                </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        function addRow() {
            var table = document.getElementById('productTable').getElementsByTagName('tbody')[0];
            var index = table.rows.length;
            var newRow = table.insertRow(table.rows.length);

            newRow.innerHTML =
                '<td><input type="text" name="Products[' + index + '].ProductName" class="form-control" /></td>' +
                '<td><input type="number" name="Products[' + index + '].ProductQuantity" class="form-control" /></td>' +
                '<td><input type="text" name="Products[' + index + '].ProductDescription" class="form-control" /></td>'+
                '<td><button type="button" onclick="removeRow(this)" class="btn btn-danger">Remove</button></td>';
        }

         function removeRow(button) {
            var row = button.parentNode.parentNode;
            row.parentNode.removeChild(row);
            reindexRows();
        }

        function reindexRows() {
            var rows = document.getElementById('productTable').getElementsByTagName('tbody')[0].rows;
            for (var i = 0; i < rows.length; i++) {
                rows[i].cells[0].getElementsByTagName('input')[0].setAttribute('name', 'Products[' + i + '].ProductName');
                rows[i].cells[1].getElementsByTagName('input')[0].setAttribute('name', 'Products[' + i + '].ProductQuantity');
                rows[i].cells[2].getElementsByTagName('input')[0].setAttribute('name', 'Products[' + i + '].ProductDescription');
            }
        }
    </script>
}