@model GroupAssignment.Models.OrderEntity

@{
    ViewData["Title"] = "Edit Order";
}

<style>
    .info-text {
        color: #155724; /* Dark green for better contrast */
    }

    .custom-header {
        background-color: #d4edda; /* Lighter green header background for contrast */
        color: #0c5460; /* Dark blue text color for contrast */
    }

    .custom-body {
        background-color: #f8f9fa; /* Light gray body background, ensuring dark text is visible */
    }

    .table-custom {
        background-color: #ffffff; /* White background for table ensures text visibility */
        border: 1px solid #dee2e6; /* Light gray border for subtle contrast */
    }

    .btn-custom {
        background-color: #28a745; /* Bootstrap green color for buttons */
        color: white; /* White text for contrast */
        margin-right: 5px; /* Add some spacing between the buttons */
    }

    .btn-custom-back {
        background-color: #6c757d; /* Bootstrap gray color for back button */
        color: white; /* White text for contrast */
    }

    .action-buttons {
        display: flex;
        gap: 5px; /* Adds space between buttons */
    }
</style>

<div class="container mt-4">
    <h1 class="info-text">@ViewData["Title"]</h1>

    <div class="card border-info mb-4">
        <div class="card-header custom-header">
            <h4 class="mb-0">Edit Order</h4>
        </div>
        <div class="card-body custom-body">
            <form asp-action="Edit">
                @Html.AntiForgeryToken()
                <input type="hidden" asp-for="Id" />

                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="form-group">
                    <label asp-for="UserName" class="control-label">User Name</label>
                    <input asp-for="UserName" class="form-control" />
                    <span asp-validation-for="UserName" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="MFRName" class="control-label">Manufacturer Name</label>
                    <input asp-for="MFRName" class="form-control" />
                    <span asp-validation-for="MFRName" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="OrderDescription" class="control-label">Order Description</label>
                    <input asp-for="OrderDescription" class="form-control" />
                    <span asp-validation-for="OrderDescription" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="OrderStatus" class="control-label">Order Status</label>
                    <input asp-for="OrderStatus" class="form-control" />
                    <span asp-validation-for="OrderStatus" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="OrderDate" class="control-label">Order Date</label>
                    <input asp-for="OrderDate" class="form-control" />
                    <span asp-validation-for="OrderDate" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="OrderDeliveryDate" class="control-label">Order Delivery Date</label>
                    <input asp-for="OrderDeliveryDate" class="form-control" />
                    <span asp-validation-for="OrderDeliveryDate" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <h2>Product Details</h2>
                    <table id="productTable" class="table table-custom">
                        <thead class="custom-header">
                            <tr>
                                <th>Product Name</th>
                                <th>Quantity</th>
                                <th>Description</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.Products.Count; i++)
                            {
                                <tr>
                                    <td>
                                        <input asp-for="Products[i].ProductName" class="form-control" />
                                        @Html.HiddenFor(_ => Model.Products[i].Id)
                                    </td>
                                    <td>
                                        <input asp-for="Products[i].ProductQuantity" type="number" class="form-control" />
                                    </td>
                                    <td>
                                        <input asp-for="Products[i].ProductDescription" class="form-control" />
                                    </td>
                                    <td>
                                        <button type="button" onclick="removeRow(this)" class="btn btn-danger">Remove</button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <button type="button" style=margin:1px onclick ="addRow()" class="btn btn-custom">Add Row</button>
                </div>
            </form>
        </div>
    </div>
                    <div class="form-group">
                    <input type="submit" style=margin:5px value ="Save" class="btn btn-custom" />
                </div
    <div class="mt-3">
        <a asp-action="Index" class="btn btn-custom-back">Back to List</a>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        function addRow() {
            var table = document.getElementById('productTable').getElementsByTagName('tbody')[0];
            var index = table.rows.length;
            var newRow = table.insertRow(table.rows.length);

            newRow.innerHTML =
                '<td><input type="text" name="Products[' + index + '].ProductName" class="form-control" /></td>' +
                '<td><input type="number" name="Products[' + index + '].ProductQuantity" class="form-control" /></td>' +
                '<td><input type="text" name="Products[' + index + '].ProductDescription" class="form-control" /></td>' +
                '<td><button type="button" onclick="removeRow(this)" class="btn btn-danger">Remove</button></td>';
        }

        function removeRow(button) {
            var row = button.parentNode.parentNode;
            row.parentNode.removeChild(row);
            reindexRows();
        }

        function reindexRows() {
            var rows = document.getElementById('productTable').getElementsByTagName('tbody')[0].rows;
            for (var i = 0; i < rows.length; i++) {
                rows[i].cells[0].getElementsByTagName('input')[0].setAttribute('name', 'Products[' + i + '].ProductName');
                rows[i].cells[1].getElementsByTagName('input')[0].setAttribute('name', 'Products[' + i + '].ProductQuantity');
                rows[i].cells[2].getElementsByTagName('input')[0].setAttribute('name', 'Products[' + i + '].ProductDescription');
            }
        }
    </script>
}