@model GroupAssignment.Data.Entities.OrderEntity

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>OrderEntity</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="MFRName" class="control-label"></label>
                <input asp-for="MFRName" class="form-control" />
                <span asp-validation-for="MFRName" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="OrderDescription" class="control-label"></label>
                <input asp-for="OrderDescription" class="form-control" />
                <span asp-validation-for="OrderDescription" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="OrderStatus" class="control-label"></label>
                <select asp-for="OrderStatus" class="form-control">
                    <option value="Pending">Pending</option>
                    <option value="Progress">In Progress</option>
                    <option value="Shipped">Shipped</option>
                </select>
            </div>

            <div class="form-group">
                <label asp-for="OrderDate" class="control-label"></label>
                <input asp-for="OrderDate" class="form-control" />
                <span asp-validation-for="OrderDate" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="OrderDeliveryDate" class="control-label"></label>
                <input asp-for="OrderDeliveryDate" class="form-control" />
                <span asp-validation-for="OrderDeliveryDate" class="text-danger"></span>
            </div>

            <div class="form-group">
                <table id="ProductTable" class="table> style="width:100%">
                    <thead>
                        <tr>
                            <th>Product Name</th>
                            <th>Quantity</th>
                            <th>Product Description</th>
                            <th>Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Existing rows, if any -->
                    </tbody>
                </table>
                <button type="button" onclick="AddRow()">Add Product</button>
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>

        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        /*
             . Hidding table on load
        */
        document.getElementById('ProductTable').style.display = 'none';

        function AddRow() {
            // Get the table by ID
            var table = document.getElementById("ProductTable");

            // Insert a row at the end of the table
            var newRow = table.insertRow(-1);

            // Insert cells (`<td>`) into the new row
            var cell1 = newRow.insertCell(0);
            var cell2 = newRow.insertCell(1);
            var cell3 = newRow.insertCell(2);


            // Add your content to the cells - here we're adding text inputs as an example
            cell1.innerHTML = '<input type="text" name="productName" class="form-control" placeholder="Product Name">';
            cell2.innerHTML = '<input type="number" name="quantity" class="form-control" placeholder="Quantity">';
            cell3.innerHTML = '<input type="text" name="productDescription" class="form-control" placeholder="Product Description">';
        }

        function gatherTableData() {
            // Initialize an empty array to hold our objects
            var productList = [];

            // Get all the table rows in the body of the ProductTable
            var rows = document.getElementById("ProductTable").getElementsByTagName("tbody")[0].rows;

            // Iterate over each row
            for (var i = 0; i < rows.length; i++) {
                // Get the inputs from the current row
                var productName = rows[i].cells[0].getElementsByTagName("input")[0].value;
                var quantity = rows[i].cells[1].getElementsByTagName("input")[0].value;
                var productDescription = rows[i].cells[2].getElementsByTagName("input")[0].value;

                // Create an object representing the current product
                var product = {
                    productName: productName,
                    quantity: quantity,
                    productDescription: productDescription
                };

                // Add the product object to our list
                productList.push(product);
            }
        }
    </script>